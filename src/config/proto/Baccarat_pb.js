/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.BetReply', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.BetRequest', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.BetSide', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.BettingResult', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.GetGameResultReply', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.GetGameRequestResult', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.PlayerResult', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.PlayerResult.GameResult', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.StartOpeningCardsResult', null, global);
goog.exportSymbol('proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.repeatedFields_, null);
};
goog.inherits(proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.displayName = 'proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accesstoken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    usersidList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest}
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest;
  return proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest}
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt64());
      msg.setUsersidList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUsersidList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
};


/**
 * optional string accessToken = 1;
 * @return {string}
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.prototype.setAccesstoken = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated int64 usersId = 2;
 * @return {!Array.<number>}
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.prototype.getUsersidList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<number>} value */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.prototype.setUsersidList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.prototype.addUsersid = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomRequest.prototype.clearUsersidList = function() {
  this.setUsersidList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.displayName = 'proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.prototype.toObject = function(opt_includeInstance) {
  return proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    issucceed: jspb.Message.getFieldWithDefault(msg, 1, false),
    gameroomid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply}
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply;
  return proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply}
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssucceed(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameroomid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssucceed();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getGameroomid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional bool isSucceed = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.prototype.getIssucceed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.prototype.setIssucceed = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 gameRoomId = 2;
 * @return {number}
 */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.prototype.getGameroomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.net.gurigoro.kaiji.baccarat.CreateNewGameRoomReply.prototype.setGameroomid = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.net.gurigoro.kaiji.baccarat.BetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.net.gurigoro.kaiji.baccarat.BetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.net.gurigoro.kaiji.baccarat.BetRequest.displayName = 'proto.net.gurigoro.kaiji.baccarat.BetRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.net.gurigoro.kaiji.baccarat.BetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.net.gurigoro.kaiji.baccarat.BetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.net.gurigoro.kaiji.baccarat.BetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.BetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accesstoken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameroomid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    betpoints: jspb.Message.getFieldWithDefault(msg, 4, 0),
    bettingside: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.net.gurigoro.kaiji.baccarat.BetRequest}
 */
proto.net.gurigoro.kaiji.baccarat.BetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.net.gurigoro.kaiji.baccarat.BetRequest;
  return proto.net.gurigoro.kaiji.baccarat.BetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.net.gurigoro.kaiji.baccarat.BetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.net.gurigoro.kaiji.baccarat.BetRequest}
 */
proto.net.gurigoro.kaiji.baccarat.BetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameroomid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBetpoints(value);
      break;
    case 5:
      var value = /** @type {!proto.net.gurigoro.kaiji.baccarat.BetSide} */ (reader.readEnum());
      msg.setBettingside(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.net.gurigoro.kaiji.baccarat.BetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.net.gurigoro.kaiji.baccarat.BetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.net.gurigoro.kaiji.baccarat.BetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.BetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGameroomid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getBetpoints();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getBettingside();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional string accessToken = 1;
 * @return {string}
 */
proto.net.gurigoro.kaiji.baccarat.BetRequest.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.net.gurigoro.kaiji.baccarat.BetRequest.prototype.setAccesstoken = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 gameRoomId = 2;
 * @return {number}
 */
proto.net.gurigoro.kaiji.baccarat.BetRequest.prototype.getGameroomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.net.gurigoro.kaiji.baccarat.BetRequest.prototype.setGameroomid = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 userId = 3;
 * @return {number}
 */
proto.net.gurigoro.kaiji.baccarat.BetRequest.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.net.gurigoro.kaiji.baccarat.BetRequest.prototype.setUserid = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 betPoints = 4;
 * @return {number}
 */
proto.net.gurigoro.kaiji.baccarat.BetRequest.prototype.getBetpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.net.gurigoro.kaiji.baccarat.BetRequest.prototype.setBetpoints = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional BetSide bettingSide = 5;
 * @return {!proto.net.gurigoro.kaiji.baccarat.BetSide}
 */
proto.net.gurigoro.kaiji.baccarat.BetRequest.prototype.getBettingside = function() {
  return /** @type {!proto.net.gurigoro.kaiji.baccarat.BetSide} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.net.gurigoro.kaiji.baccarat.BetSide} value */
proto.net.gurigoro.kaiji.baccarat.BetRequest.prototype.setBettingside = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.net.gurigoro.kaiji.baccarat.BetReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.net.gurigoro.kaiji.baccarat.BetReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.net.gurigoro.kaiji.baccarat.BetReply.displayName = 'proto.net.gurigoro.kaiji.baccarat.BetReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.net.gurigoro.kaiji.baccarat.BetReply.prototype.toObject = function(opt_includeInstance) {
  return proto.net.gurigoro.kaiji.baccarat.BetReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.net.gurigoro.kaiji.baccarat.BetReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.BetReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.net.gurigoro.kaiji.baccarat.BetReply}
 */
proto.net.gurigoro.kaiji.baccarat.BetReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.net.gurigoro.kaiji.baccarat.BetReply;
  return proto.net.gurigoro.kaiji.baccarat.BetReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.net.gurigoro.kaiji.baccarat.BetReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.net.gurigoro.kaiji.baccarat.BetReply}
 */
proto.net.gurigoro.kaiji.baccarat.BetReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.net.gurigoro.kaiji.baccarat.BettingResult} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.net.gurigoro.kaiji.baccarat.BetReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.net.gurigoro.kaiji.baccarat.BetReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.net.gurigoro.kaiji.baccarat.BetReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.BetReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional BettingResult result = 1;
 * @return {!proto.net.gurigoro.kaiji.baccarat.BettingResult}
 */
proto.net.gurigoro.kaiji.baccarat.BetReply.prototype.getResult = function() {
  return /** @type {!proto.net.gurigoro.kaiji.baccarat.BettingResult} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.net.gurigoro.kaiji.baccarat.BettingResult} value */
proto.net.gurigoro.kaiji.baccarat.BetReply.prototype.setResult = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 userId = 2;
 * @return {number}
 */
proto.net.gurigoro.kaiji.baccarat.BetReply.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.net.gurigoro.kaiji.baccarat.BetReply.prototype.setUserid = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.displayName = 'proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accesstoken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameroomid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest;
  return proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameroomid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGameroomid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string accessToken = 1;
 * @return {string}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.prototype.setAccesstoken = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 gameRoomId = 2;
 * @return {number}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.prototype.getGameroomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsRequest.prototype.setGameroomid = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.displayName = 'proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.prototype.toObject = function(opt_includeInstance) {
  return proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    wonside: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply;
  return proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.StartOpeningCardsResult} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {!proto.net.gurigoro.kaiji.baccarat.BetSide} */ (reader.readEnum());
      msg.setWonside(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getWonside();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.StartOpeningCardsResult = {
  SUCCEED: 0,
  NOT_ALL_USERS_BETTED_YET: 1,
  UNKNOWN_FAILED: 2
};

/**
 * optional StartOpeningCardsResult result = 1;
 * @return {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.StartOpeningCardsResult}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.prototype.getResult = function() {
  return /** @type {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.StartOpeningCardsResult} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.StartOpeningCardsResult} value */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.prototype.setResult = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional BetSide wonSide = 2;
 * @return {!proto.net.gurigoro.kaiji.baccarat.BetSide}
 */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.prototype.getWonside = function() {
  return /** @type {!proto.net.gurigoro.kaiji.baccarat.BetSide} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.net.gurigoro.kaiji.baccarat.BetSide} value */
proto.net.gurigoro.kaiji.baccarat.StartOpeningCardsReply.prototype.setWonside = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.displayName = 'proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accesstoken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameroomid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest;
  return proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameroomid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGameroomid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string accessToken = 1;
 * @return {string}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.prototype.setAccesstoken = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 gameRoomId = 2;
 * @return {number}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.prototype.getGameroomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.net.gurigoro.kaiji.baccarat.GetGameResultRequest.prototype.setGameroomid = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.net.gurigoro.kaiji.baccarat.PlayerResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.net.gurigoro.kaiji.baccarat.PlayerResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.net.gurigoro.kaiji.baccarat.PlayerResult.displayName = 'proto.net.gurigoro.kaiji.baccarat.PlayerResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.prototype.toObject = function(opt_includeInstance) {
  return proto.net.gurigoro.kaiji.baccarat.PlayerResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.net.gurigoro.kaiji.baccarat.PlayerResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    gameresult: jspb.Message.getFieldWithDefault(msg, 2, 0),
    gotpoints: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.net.gurigoro.kaiji.baccarat.PlayerResult}
 */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.net.gurigoro.kaiji.baccarat.PlayerResult;
  return proto.net.gurigoro.kaiji.baccarat.PlayerResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.net.gurigoro.kaiji.baccarat.PlayerResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.net.gurigoro.kaiji.baccarat.PlayerResult}
 */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUserid(value);
      break;
    case 2:
      var value = /** @type {!proto.net.gurigoro.kaiji.baccarat.PlayerResult.GameResult} */ (reader.readEnum());
      msg.setGameresult(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGotpoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.net.gurigoro.kaiji.baccarat.PlayerResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.net.gurigoro.kaiji.baccarat.PlayerResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getGameresult();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getGotpoints();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.GameResult = {
  LOSE: 0,
  WIN: 1,
  TIE: 2
};

/**
 * optional int64 userId = 1;
 * @return {number}
 */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.prototype.getUserid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.prototype.setUserid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional GameResult gameResult = 2;
 * @return {!proto.net.gurigoro.kaiji.baccarat.PlayerResult.GameResult}
 */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.prototype.getGameresult = function() {
  return /** @type {!proto.net.gurigoro.kaiji.baccarat.PlayerResult.GameResult} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.net.gurigoro.kaiji.baccarat.PlayerResult.GameResult} value */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.prototype.setGameresult = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 gotPoints = 3;
 * @return {number}
 */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.prototype.getGotpoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.net.gurigoro.kaiji.baccarat.PlayerResult.prototype.setGotpoints = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.repeatedFields_, null);
};
goog.inherits(proto.net.gurigoro.kaiji.baccarat.GetGameResultReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.displayName = 'proto.net.gurigoro.kaiji.baccarat.GetGameResultReply';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.prototype.toObject = function(opt_includeInstance) {
  return proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.net.gurigoro.kaiji.baccarat.GetGameResultReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: jspb.Message.getFieldWithDefault(msg, 1, 0),
    playerresultsList: jspb.Message.toObjectList(msg.getPlayerresultsList(),
    proto.net.gurigoro.kaiji.baccarat.PlayerResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.net.gurigoro.kaiji.baccarat.GetGameResultReply}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.net.gurigoro.kaiji.baccarat.GetGameResultReply;
  return proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.net.gurigoro.kaiji.baccarat.GetGameResultReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.net.gurigoro.kaiji.baccarat.GetGameResultReply}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.GetGameRequestResult} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = new proto.net.gurigoro.kaiji.baccarat.PlayerResult;
      reader.readMessage(value,proto.net.gurigoro.kaiji.baccarat.PlayerResult.deserializeBinaryFromReader);
      msg.addPlayerresults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.net.gurigoro.kaiji.baccarat.GetGameResultReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPlayerresultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.net.gurigoro.kaiji.baccarat.PlayerResult.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.GetGameRequestResult = {
  SUCCEED: 0,
  NOT_OPENED_CARDS_YET: 1,
  UNKNOWN_FAILED: 2
};

/**
 * optional GetGameRequestResult result = 1;
 * @return {!proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.GetGameRequestResult}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.prototype.getResult = function() {
  return /** @type {!proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.GetGameRequestResult} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.GetGameRequestResult} value */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.prototype.setResult = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated PlayerResult playerResults = 2;
 * @return {!Array.<!proto.net.gurigoro.kaiji.baccarat.PlayerResult>}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.prototype.getPlayerresultsList = function() {
  return /** @type{!Array.<!proto.net.gurigoro.kaiji.baccarat.PlayerResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.net.gurigoro.kaiji.baccarat.PlayerResult, 2));
};


/** @param {!Array.<!proto.net.gurigoro.kaiji.baccarat.PlayerResult>} value */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.prototype.setPlayerresultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.net.gurigoro.kaiji.baccarat.PlayerResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.net.gurigoro.kaiji.baccarat.PlayerResult}
 */
proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.prototype.addPlayerresults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.net.gurigoro.kaiji.baccarat.PlayerResult, opt_index);
};


proto.net.gurigoro.kaiji.baccarat.GetGameResultReply.prototype.clearPlayerresultsList = function() {
  this.setPlayerresultsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.displayName = 'proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    accesstoken: jspb.Message.getFieldWithDefault(msg, 1, ""),
    gameroomid: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest}
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest;
  return proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest}
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGameroomid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccesstoken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGameroomid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional string accessToken = 1;
 * @return {string}
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.prototype.setAccesstoken = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 gameRoomId = 2;
 * @return {number}
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.prototype.getGameroomid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomRequest.prototype.setGameroomid = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply.displayName = 'proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply.prototype.toObject = function(opt_includeInstance) {
  return proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    issucceed: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply}
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply;
  return proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply}
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssucceed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssucceed();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool isSucceed = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply.prototype.getIssucceed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.net.gurigoro.kaiji.baccarat.DestroyGameRoomReply.prototype.setIssucceed = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.net.gurigoro.kaiji.baccarat.BetSide = {
  PLAYER: 0,
  BANKER: 1,
  TIE: 2
};

/**
 * @enum {number}
 */
proto.net.gurigoro.kaiji.baccarat.BettingResult = {
  SUCCEED: 0,
  NO_ENOUGH_POINTS: 1,
  UNKNOWN_FAILED: 2
};

goog.object.extend(exports, proto.net.gurigoro.kaiji.baccarat);
